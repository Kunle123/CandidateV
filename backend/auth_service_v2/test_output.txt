============================= test session starts ==============================
platform darwin -- Python 3.9.6, pytest-8.0.0, pluggy-1.5.0 -- /Users/admin/Documents/KunleDevFolder/CandidateV/backend/auth_service_v2/venv/bin/python3
cachedir: .pytest_cache
rootdir: /Users/admin/Documents/KunleDevFolder/CandidateV/backend/auth_service_v2
configfile: pytest.ini
plugins: asyncio-0.23.5, anyio-4.9.0, cov-4.1.0
asyncio: mode=strict
collecting ... collected 138 items

backend/auth_service_v2/tests/api/test_audit_api.py::test_get_audit_logs FAILED [  0%]
backend/auth_service_v2/tests/api/test_audit_api.py::test_get_audit_logs_with_filters FAILED [  1%]
backend/auth_service_v2/tests/api/test_audit_api.py::test_get_audit_log_summary FAILED [  2%]

=================================== FAILURES ===================================
_____________________________ test_get_audit_logs ______________________________

client = <async_generator object client at 0x105b0c280>
admin_headers = <coroutine object admin_headers at 0x1056de640>
db_session = <async_generator object db_session at 0x105b0c3a0>

    @pytest.mark.asyncio
    async def test_get_audit_logs(client, admin_headers, db_session: AsyncSession):
        """Test retrieving audit logs through API endpoint."""
>       headers = await admin_headers

backend/auth_service_v2/tests/api/test_audit_api.py:29: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
backend/auth_service_v2/tests/api/test_audit_api.py:22: in admin_headers
    admin = await create_user(db_session, user_in)
backend/auth_service_v2/app/services/user.py:34: in create_user
    db_user = await get_user_by_email(db, email=user_in.email)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <async_generator object db_session at 0x105b0c3a0>
email = 'audit_admin@example.com'

    async def get_user_by_email(db: AsyncSession, email: str) -> Optional[DBUser]:
        """Get a user by email."""
>       result = await db.execute(select(DBUser).where(DBUser.email == email))
E       AttributeError: 'async_generator' object has no attribute 'execute'

backend/auth_service_v2/app/services/user.py:20: AttributeError
------------------------------ Captured log call -------------------------------
WARNING  passlib.handlers.bcrypt:bcrypt.py:622 (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/Users/admin/Documents/KunleDevFolder/CandidateV/backend/auth_service_v2/venv/lib/python3.9/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
AttributeError: module 'bcrypt' has no attribute '__about__'
_______________________ test_get_audit_logs_with_filters _______________________

client = <async_generator object client at 0x105b0c280>
admin_headers = <coroutine object admin_headers at 0x105abeac0>
db_session = <async_generator object db_session at 0x105b77dc0>

    @pytest.mark.asyncio
    async def test_get_audit_logs_with_filters(
        client,
        admin_headers,
        db_session: AsyncSession
    ):
        """Test retrieving audit logs with various filters."""
>       headers = await admin_headers

backend/auth_service_v2/tests/api/test_audit_api.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
backend/auth_service_v2/tests/api/test_audit_api.py:22: in admin_headers
    admin = await create_user(db_session, user_in)
backend/auth_service_v2/app/services/user.py:34: in create_user
    db_user = await get_user_by_email(db, email=user_in.email)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <async_generator object db_session at 0x105b77dc0>
email = 'audit_admin@example.com'

    async def get_user_by_email(db: AsyncSession, email: str) -> Optional[DBUser]:
        """Get a user by email."""
>       result = await db.execute(select(DBUser).where(DBUser.email == email))
E       AttributeError: 'async_generator' object has no attribute 'execute'

backend/auth_service_v2/app/services/user.py:20: AttributeError
__________________________ test_get_audit_log_summary __________________________

client = <async_generator object client at 0x105b0c280>
admin_headers = <coroutine object admin_headers at 0x105b869c0>
db_session = <async_generator object db_session at 0x105b97040>

    @pytest.mark.asyncio
    async def test_get_audit_log_summary(
        client,
        admin_headers,
        db_session: AsyncSession
    ):
        """Test retrieving audit log summary statistics."""
>       headers = await admin_headers

backend/auth_service_v2/tests/api/test_audit_api.py:102: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
backend/auth_service_v2/tests/api/test_audit_api.py:22: in admin_headers
    admin = await create_user(db_session, user_in)
backend/auth_service_v2/app/services/user.py:34: in create_user
    db_user = await get_user_by_email(db, email=user_in.email)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <async_generator object db_session at 0x105b97040>
email = 'audit_admin@example.com'

    async def get_user_by_email(db: AsyncSession, email: str) -> Optional[DBUser]:
        """Get a user by email."""
>       result = await db.execute(select(DBUser).where(DBUser.email == email))
E       AttributeError: 'async_generator' object has no attribute 'execute'

backend/auth_service_v2/app/services/user.py:20: AttributeError

---------- coverage: platform darwin, python 3.9.6-final-0 -----------
Name                          Stmts   Miss  Cover   Missing
-----------------------------------------------------------
app/__init__.py                   0      0   100%
app/core/__init__.py              0      0   100%
app/core/config.py               44     44     0%   4-68
app/core/security.py             33     33     0%   2-57
app/models/__init__.py            0      0   100%
app/models/token.py               4      4     0%   1-6
app/services/__init__.py          4      4     0%   2-5
app/services/auth.py             11     11     0%   2-18
app/services/email.py            29     29     0%   2-96
app/tests/__init__.py             0      0   100%
app/tests/utils/__init__.py       0      0   100%
app/tests/utils/user.py           6      6     0%   2-15
app/tests/utils/utils.py          8      8     0%   2-16
-----------------------------------------------------------
TOTAL                           139    139     0%
Coverage HTML written to dir htmlcov

FAIL Required test coverage of 90% not reached. Total coverage: 0.00%
=========================== short test summary info ============================
FAILED backend/auth_service_v2/tests/api/test_audit_api.py::test_get_audit_logs
FAILED backend/auth_service_v2/tests/api/test_audit_api.py::test_get_audit_logs_with_filters
FAILED backend/auth_service_v2/tests/api/test_audit_api.py::test_get_audit_log_summary
!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 3 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!
============================== 3 failed in 1.61s ===============================
